<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     TwoKChargeInc_TwoKCharge
 * @copyright   Copyright (c) 2012 2000Charge Inc (http://www.2000charge.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<?php

// Retrieve order


   if ($_SERVER['REQUEST_METHOD'] == "POST" && isset($_POST["transactionNumber"]) ) {
       
        $validated = $_POST['status'];
           
       if ($_POST['account'] == $_POST['pricepoint']) {
           
            $orderId = $_POST["passthru"];
            $order = Mage::getModel('sales/order')->loadByIncrementId($orderId);
                
            if ($_POST['error'] == "" && $validated == "APPROVED" && $_POST["ip"] == $order->getRemoteIp()) {
                                
            //        $orderId = $_POST["passthru"];
            //        $order = Mage::getModel('sales/order')->loadByIncrementId($orderId);

           //         Mage::log(var_export($order->debug(), TRUE), null,'$orderOBJ_post.log');
                    
                  //  $order->setState(Mage_Sales_Model_Order::STATE_PROCESSING, true, 'Gateway has authorized the payment.');
                  //  $order->setStatus('processing_paid');
                  //  $order->sendNewOrderEmail();
                  //  $order->setEmailSent(true);
                  //  $order->save();
                
                //    Mage::getSingleton('checkout/session')->unsQuoteId();
                                                     
                  return Mage::app()->getFrontController()->getResponse()->setRedirect(Mage::getUrl('checkout/onepage/success'));
      
            } else if ($_POST['error'] != "" && $validated == "DECLINED") {
                
           //     $err_msg = $_POST['error'];
           //     $orderId = $_POST["passthru"];
           //     $order = Mage::getModel('sales/order')->loadByIncrementId($orderId);
                 
         //      $order->cancel()->setState(Mage_Sales_Model_Order::STATE_CANCELED, true, "Gateway has declined the payment. Error: $err_msg")->save();
                
         //       Mage::getSingleton('checkout/session')->unsQuoteId();

            return Mage::app()->getFrontController()->getResponse()->setRedirect(Mage::getUrl('checkout/onepage/failure'));
  
            }
        }
        else
            Mage_Core_Controller_Varien_Action::_redirect('../..');
    
    } elseif ($_SERVER['REQUEST_METHOD'] == "GET" && isset($_GET["transactionNumber"]) ) {
       
        $validated = $_GET['status'];
        
       if ($_GET['account'] == $_GET['pricepoint']) {
           
           $orderId = $_GET["passthru"];
           $order = Mage::getModel('sales/order')->loadByIncrementId($orderId);
           

            if ( $_GET['error'] == "" && $validated == "APPROVED" && $_GET["ip"] == $order->getRemoteIp() ) 
            {
   
           //     $orderId = $_GET["passthru"];
           //     $order = Mage::getModel('sales/order')->loadByIncrementId($orderId);
                 
         //        Mage::log(var_export($order->debug(), TRUE), null,'$orderOBJ_get_postback.log');
                
                    if ($order->getState() == "new") {
                        
                        $order->setState(Mage_Sales_Model_Order::STATE_PROCESSING, true, 'Gateway has authorized the payment.');
                        $order->setStatus('processing_paid');
                        $order->sendNewOrderEmail();
                        $order->setEmailSent(true);
                        $order->save();
                        
                    Mage::getSingleton('checkout/session')->unsQuoteId();
                    return Mage::app()->getFrontController()->getResponse()->setRedirect(Mage::getUrl('twokcharge/index/success')); 
                    
                    }

              Mage::getSingleton('checkout/session')->unsQuoteId();
              return Mage::app()->getFrontController()->getResponse()->setRedirect(Mage::getUrl('twokcharge/index/isapprove'));

            } else if ($_GET['error'] != "" && $validated == "DECLINED") {
                
                $err_msg = $_GET['error'];
                $orderId = $_GET["passthru"];
                $order = Mage::getModel('sales/order')->loadByIncrementId($orderId);
                 
                $order->cancel()->setState(Mage_Sales_Model_Order::STATE_CANCELED, true, "Gateway has declined the payment. Error: $err_msg")->save();
                
                Mage::getSingleton('checkout/session')->unsQuoteId();
            
            return Mage::app()->getFrontController()->getResponse()->setRedirect(Mage::getUrl('twokcharge/index/failure'));
  
            }
        }
        else
            Mage_Core_Controller_Varien_Action::_redirect('../..');
    }

?>





